services:
  db:
    image: postgres:15
    container_name: political_transcripts_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-political_transcripts}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
    user: postgres
    restart: unless-stopped

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: political_transcripts_api
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-political_transcripts}
      API_HOST: ${API_HOST:-0.0.0.0}
      API_PORT: ${API_PORT:-8000}
      BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS:-["http://localhost:3000", "https://polibase.nl"]}
      HTML_DATA_DIR: ${HTML_DATA_DIR:-/data/html}
      XML_DATA_DIR: ${XML_DATA_DIR:-/root/tweedekamer_scrape/tweede-kamer-scraper/output/xml/}
      DEBUG: ${DEBUG:-true}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL:-http://elasticsearch:9200}
      MEILI_HOST: ${MEILI_HOST:-http://meilisearch:7700}
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-}
      API_WORKERS: ${API_WORKERS:-5}
    volumes:
      - ./backend:/app
      - ./data:/data
      - /root/polibase/out/html:/data/html:ro
      - /root/tweede-kamer-scraper/output/raw_xml:${XML_DATA_DIR:-/root/tweedekamer_scrape/tweede-kamer-scraper/output/xml/}:ro
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      meilisearch:
        condition: service_started
    # Use start script to allow configurable workers via API_WORKERS
    command: sh /app/start.sh
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health', timeout=10)"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s
    security_opt:
      - no-new-privileges:true
    read_only: false
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
    networks:
      - default
      - traefik_traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.polibase-api.rule=Host(`polibase.nl`) && PathPrefix(`/api`, `/health`, `/docs`, `/redoc`)"
      - "traefik.http.routers.polibase-api.entrypoints=websecure"
      - "traefik.http.routers.polibase-api.tls=true"
      - "traefik.http.routers.polibase-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.polibase-api.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik_traefik-network"
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: political_transcripts_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: false
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: political_transcripts_meilisearch
    environment:
      MEILI_ENV: "production"
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-change-me}
      MEILI_HTTP_ADDR: "0.0.0.0:7700"
      MEILI_EXPERIMENTAL_ENABLE_VECTOR_STORE: "true"
      MEILI_EXPERIMENTAL_ENABLE_METRICS: "true"
    ports:
      - "7700:7700"
    volumes:
      - meili_data:/meili_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: false
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: political_transcripts_web
    environment:
      - REACT_APP_TITLE=PoliBase - Political Transcript Search Platform
      - REACT_APP_API_URL=https://polibase.nl
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    security_opt:
      - no-new-privileges:true
    read_only: false
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
    networks:
      - default
      - traefik_traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.polibase-web.rule=Host(`polibase.nl`)"
      - "traefik.http.routers.polibase-web.entrypoints=websecure"
      - "traefik.http.routers.polibase-web.tls=true"
      - "traefik.http.routers.polibase-web.tls.certresolver=letsencrypt"
      - "traefik.http.services.polibase-web.loadbalancer.server.port=3000"
      - "traefik.http.routers.polibase-web-http.rule=Host(`polibase.nl`)"
      - "traefik.http.routers.polibase-web-http.entrypoints=web"
      - "traefik.http.routers.polibase-web-http.middlewares=redirect-to-https@docker"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.docker.network=traefik_traefik-network"
    restart: unless-stopped

  meili-sync:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: political_transcripts_meili_sync
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/political_transcripts
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    depends_on:
      db:
        condition: service_healthy
      meilisearch:
        condition: service_started
    command: python scripts/auto_meili_sync.py --interval 60
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: false
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID

volumes:
  postgres_data:
  es_data:
  meili_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  traefik_traefik-network:
    external: true