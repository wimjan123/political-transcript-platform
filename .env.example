# Database Configuration
POSTGRES_DB=political_transcripts
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/political_transcripts

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]

# Frontend Configuration
## Frontend API base URL
# Leave empty to use relative URLs with CRA dev proxy (recommended for docker-compose dev)
# Set to a full URL (e.g., http://your-host:8000) only if serving frontend without proxy
REACT_APP_API_URL=
REACT_APP_TITLE=Political Transcript Search

# Data Configuration
HTML_DATA_DIR=/root/polibase/out/html
XML_DATA_DIR=/root/tweedekamer_scrape/tweede-kamer-scraper/output/xml/
PROCESSED_DATA_DIR=./data/processed
UPLOAD_DIR=./data/uploads

# Security
SECRET_KEY=your-secret-key-here
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Development
DEBUG=true
LOG_LEVEL=INFO

# Meilisearch
MEILI_MASTER_KEY=change-me
MEILI_HOST=http://localhost:7700
MEILI_TIMEOUT=30000

# Airtable Integration for Conversational Search Analytics
# To enable real Airtable integration, uncomment and configure these values:
# REACT_APP_AIRTABLE_API_KEY=your_airtable_personal_access_token_here
# REACT_APP_AIRTABLE_BASE_ID=your_airtable_base_id_here
# REACT_APP_AIRTABLE_BASE_URL=https://api.airtable.com

# Airtable Setup Instructions:
# 1. Create a new Airtable base for the analytics data
# 2. Create a Personal Access Token at https://airtable.com/create/tokens
# 3. Create two tables in your base:
#    - ConversationalQueries (for query logs)
#    - SearchAnalytics (for aggregated analytics)
# 4. Configure the required fields as described in src/services/airtable.ts
# 5. Set the environment variables above with your actual values
